package cfcc.com.shouChi.db;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import cfcc.com.shouChi.db.BaoCun;
import cfcc.com.shouChi.db.DingDan;
import cfcc.com.shouChi.db.Info;
import cfcc.com.shouChi.db.QuanBie;

import cfcc.com.shouChi.db.BaoCunDao;
import cfcc.com.shouChi.db.DingDanDao;
import cfcc.com.shouChi.db.InfoDao;
import cfcc.com.shouChi.db.QuanBieDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig baoCunDaoConfig;
    private final DaoConfig dingDanDaoConfig;
    private final DaoConfig infoDaoConfig;
    private final DaoConfig quanBieDaoConfig;

    private final BaoCunDao baoCunDao;
    private final DingDanDao dingDanDao;
    private final InfoDao infoDao;
    private final QuanBieDao quanBieDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        baoCunDaoConfig = daoConfigMap.get(BaoCunDao.class).clone();
        baoCunDaoConfig.initIdentityScope(type);

        dingDanDaoConfig = daoConfigMap.get(DingDanDao.class).clone();
        dingDanDaoConfig.initIdentityScope(type);

        infoDaoConfig = daoConfigMap.get(InfoDao.class).clone();
        infoDaoConfig.initIdentityScope(type);

        quanBieDaoConfig = daoConfigMap.get(QuanBieDao.class).clone();
        quanBieDaoConfig.initIdentityScope(type);

        baoCunDao = new BaoCunDao(baoCunDaoConfig, this);
        dingDanDao = new DingDanDao(dingDanDaoConfig, this);
        infoDao = new InfoDao(infoDaoConfig, this);
        quanBieDao = new QuanBieDao(quanBieDaoConfig, this);

        registerDao(BaoCun.class, baoCunDao);
        registerDao(DingDan.class, dingDanDao);
        registerDao(Info.class, infoDao);
        registerDao(QuanBie.class, quanBieDao);
    }
    
    public void clear() {
        baoCunDaoConfig.clearIdentityScope();
        dingDanDaoConfig.clearIdentityScope();
        infoDaoConfig.clearIdentityScope();
        quanBieDaoConfig.clearIdentityScope();
    }

    public BaoCunDao getBaoCunDao() {
        return baoCunDao;
    }

    public DingDanDao getDingDanDao() {
        return dingDanDao;
    }

    public InfoDao getInfoDao() {
        return infoDao;
    }

    public QuanBieDao getQuanBieDao() {
        return quanBieDao;
    }

}
